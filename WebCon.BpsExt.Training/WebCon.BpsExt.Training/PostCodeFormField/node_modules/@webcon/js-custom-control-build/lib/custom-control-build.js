const { watch } = require('gulp');
const { build } = require('./tasks/build');
const { check, format } = require('./tasks/check');
const { clean } = require('./tasks/clean');
const { lint } = require('./tasks/lint');

const initialize = gulpInst => {
    const buildTask = build(gulpInst);
    const checkTask = check(gulpInst);
    const cleanTask = clean(gulpInst);
    const formatTask = format(gulpInst);
    const lintTask = lint(gulpInst);
    const defaultTask = gulpInst.series(cleanTask, lintTask, buildTask);

    return {
        build: buildTask,
        check: checkTask,
        clean: cleanTask,
        default: defaultTask,
        format: formatTask,
        lint: lintTask,
        watch: () => {
            watch(
                'src/**/*',
                {
                    ignoreInitial: false,
                },
                gulpInst.series(
                    cleanTask,
                    async function lint() {
                        const task = await lintTask();

                        task.on('error', error => {
                            console.error(error);

                            task.emit('end');
                        });

                        return task;
                    },
                    async function build() {
                        const task = await buildTask();

                        task.on('error', error => {
                            console.error(error);

                            task.emit('end');
                        });

                        return task;
                    }
                )
            );
        },
    };
};

exports.initialize = initialize;
